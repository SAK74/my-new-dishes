{"version":3,"sources":["STORE/store.js","PAGES/confirmPage.js","PAGES/selectPage.js","PAGES/summaryPage.js","App.js","index.js"],"names":["sendRequest","createAsyncThunk","_","getState","axios","url","method","headers","data","order","then","resp","catch","err","mess","response","console","log","Object","entries","key","val","toUpperCase","request","Promise","reject","disherSlice","createSlice","name","initialState","preparation_time","type","status","error","sendedOrders","reducers","addOrder","state","action","payload","extraReducers","fulfilled","push","pending","rejected","message","actions","configureStore","reducer","ConfirmPage","useSelector","dispatch","useDispatch","history","useHistory","renderState","map","index","ListItemText","sx","px","primary","secondary","Paper","component","List","minWidth","Stack","direction","width","justifyContent","my","Button","Link","to","children","onClick","CustomField","styled","props","parse","value","Number","undefined","render","meta","input","rest","TextField","inputProps","InputLabelProps","shrink","required","invalid","touched","helperText","theme","flex","breakpoints","up","StyledSlider","Slider","color","StartPage","other","checkFills","checkNaN","isNaN","combineCheck","reduce","validator","onSubmit","values","diameter","initialValues","initialize","handleSubmit","form","Box","noValidate","display","alignItems","flexDirection","p","spacing","validate","label","split","some","step","select","onChange","target","newParam","no_of_slices","spiciness_scale","slices_of_bread","MenuItem","Collapse","m","in","orientation","mx","mb","min","InputProps","endAdornment","position","mt","Typography","variant","top","valueLabelDisplay","max","disabled","pristine","reset","hasValidationErrors","SummaryPage","renderedList","lastOrder","useState","openPopover","setOpenPopover","openModal","setOpenModal","renderHistory","length","ListItem","Card","CardHeader","title","subheader","subheaderTypographyProps","id","CardActions","size","endIcon","ev","Popover","open","Boolean","anchorEl","onClose","elevation","py","Backdrop","CircularProgress","Modal","Zoom","left","transform","maxWidth","overflow","Ofset","mixins","toolbar","steps","Main","setStep","drawer","setDrawer","dark","setDark","useMemo","createTheme","palette","mode","StyledSwitch","MuiSwitch","switchClasses","switchBase","height","ThemeProvider","AppBar","Toolbar","IconButton","Settings","Drawer","anchor","closeAfterTransition","PaperProps","FormControlLabel","labelPlacement","checked","ml","control","icon","LightMode","checkedIcon","DarkMode","prev","Container","exact","path","location","pathname","Stepper","activeStep","alternativeLabel","Step","StepLabel","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.91ace063.chunk.js","sourcesContent":["import { configureStore, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialOrder = {\r\n    name: \"\",\r\n    preparation_time: \"00:00:00\",\r\n    type: ''\r\n}\r\n\r\nexport const sendRequest = createAsyncThunk('sendRequest', (_, { getState }) => {\r\n    return axios({\r\n        url: 'https://frosty-wood-6558.getsandbox.com/dishes',\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        data: getState().order,\r\n    })\r\n        .then(resp => {\r\n            return resp.data;\r\n        })\r\n        .catch(err => {\r\n            let mess = '';\r\n            if (err.response) {\r\n                console.log('response: ', err.response);\r\n                for (const [key, val] of Object.entries(err.response.data)) {\r\n                    mess += `${key.toUpperCase()}: ${val}`;\r\n                }\r\n            } else if (err.request) {\r\n                console.log('request: ', err.request);\r\n                mess = err.request;\r\n            } else mess = err;\r\n            return Promise.reject(mess);\r\n        });\r\n\r\n    // const resp = await fetch('https://frosty-wood-6558.getsandbox.com/dishes', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json'\r\n    //     },\r\n    //     body: JSON.stringify(getState().order)\r\n    // });\r\n    // if (resp && !resp.ok){\r\n    //     const [mess] = Object.entries(await resp.json());\r\n    //     let err = `${mess[0].toUpperCase()}: ${mess[1]}`;\r\n    //     switch(resp.status){\r\n    //         case 400: err = 'Bad request! ' + err; break;\r\n    //         // ...\r\n    //         default: err = `${resp.status} ${resp.statusText} ` + err;\r\n    //     }\r\n    //     console.log(resp.status, resp.statusText);\r\n    //     throw new Error(`Error... ${err}`);\r\n    // }\r\n    // return resp.json();\r\n});\r\n\r\nconst disherSlice = createSlice({\r\n    name: 'dishes',\r\n    initialState: {\r\n        order: initialOrder,\r\n        status: 'iddle',\r\n        error: null,\r\n        sendedOrders: []\r\n    },\r\n    reducers: {\r\n        addOrder: (state, action) => {\r\n            state.order = action.payload;\r\n            state.status = 'iddle';\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [sendRequest.fulfilled]: (state, action) => {\r\n            state.status = 'complete';\r\n            state.sendedOrders.push(action.payload);\r\n        },\r\n        [sendRequest.pending]: (state) => { state.status = 'pending' },\r\n        [sendRequest.rejected]: (state, action) => {\r\n            state.status = 'error';\r\n            state.error = action.error.message;\r\n        }\r\n    }\r\n});\r\nexport const { addOrder } = disherSlice.actions;\r\nexport default configureStore({ reducer: disherSlice.reducer });","import { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, List, ListItemText, Paper, Stack } from '@mui/material';\r\nimport { sendRequest } from '../STORE/store';\r\n\r\nexport default function ConfirmPage() {\r\n    const state = useSelector(state => state.order);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const renderState = Object.entries(state).map((val, index) =>\r\n        <ListItemText\r\n            key={index}\r\n            sx={{ px: 2 }}\r\n            primary={val[0] + ':'}\r\n            secondary={val[1]}\r\n        />);\r\n\r\n    const handleClick = () => {\r\n        dispatch(sendRequest());\r\n        history.push('/summary');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper component={List} sx={{ minWidth: 300 }}>\r\n                {renderState}\r\n            </Paper>\r\n            <Stack direction='row' sx={{ width: '50%', justifyContent: 'space-between', my: 2 }}>\r\n                <Button\r\n                    component={Link}\r\n                    to='/'\r\n                    children='back'\r\n                />\r\n                <Button\r\n                    children='next'\r\n                    onClick={handleClick}\r\n                />\r\n            </Stack>\r\n        </>\r\n    );\r\n}","import {\r\n    Stack, TextField, Box, Collapse,\r\n    MenuItem, Slider, Button, Typography\r\n} from \"@mui/material\";\r\nimport { styled } from '@mui/material/styles';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addOrder } from \"../STORE/store\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Form, Field } from \"react-final-form\";\r\n\r\nconst CustomField = styled(props => <Field {...props}\r\n    parse={props.type === 'number' ? value => Number(value) : undefined}\r\n    render={({ meta, input, ...rest }) => <TextField {...rest}\r\n        inputProps={{ ...input, ...rest.inputProps }}\r\n        InputLabelProps={{ shrink: true }}\r\n        required\r\n        error={meta.invalid && meta.touched}\r\n        helperText={meta.invalid && meta.touched && meta.error}\r\n    />}\r\n/>)(({ theme }) => ({\r\n    flex: 1,\r\n    [theme.breakpoints.up('md')]: {\r\n        width: 200\r\n    }\r\n}));\r\n\r\nconst StyledSlider = styled(Slider)(({ value }) => {\r\n    const colors = ['yellow', '#ffd100', 'orange', '#fe7900',\r\n        '#ff5b00', '#d14b00', '#fe0000', '#bd0000', '#a50000', '#6d0000'];\r\n    return ({\r\n        color: colors[value - 1]\r\n    })\r\n});\r\n\r\nexport default function StartPage() {\r\n    const { name, preparation_time, type, ...other } = useSelector(state => state.order);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onSubmit = values => {\r\n        if (values.type === 'pizza') values = { ...values, diameter: Number(values.diameter) };\r\n        dispatch(addOrder(values));\r\n        history.push('/confirm');\r\n    }\r\n    const checkFills = value => value ? undefined : \"Fill this field\";\r\n    const checkNaN = value => isNaN(value) ? \"Value must be a number\" : undefined;\r\n    const combineCheck = value =>\r\n        [checkFills, checkNaN].reduce((error, validator) => error || validator(value), undefined);\r\n\r\n    // initialize form with ex parameters (dependently with type of dish)\r\n    const handleTypeChange = initialize => ({ target: { value } }) => {\r\n        const newParam = value === 'pizza' ? { no_of_slices: 1, diameter: 0 } :\r\n            value === 'soup' ? { spiciness_scale: 1 } : { slices_of_bread: 1 };\r\n        initialize(({ name, preparation_time, type }) => ({\r\n            name, preparation_time, type, ...newParam\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}\r\n            // subscription = {{values: true, modified: true}}\r\n            initialValues={{ name, preparation_time, type, ...other }}\r\n            render={({ handleSubmit, values, form, ...rest }) => {\r\n                return <Box\r\n                    component='form' onSubmit={handleSubmit} noValidate\r\n                    sx={{ display: 'flex', alignItems: 'center', flexDirection: 'column', p: 3 }}\r\n                >\r\n                    <Stack direction='row' sx={{ justifyContent: 'center' }} spacing={2}>\r\n                        <CustomField\r\n                            name='name'\r\n                            validate={checkFills}\r\n                            label='Dish name'\r\n                        />\r\n                        <CustomField\r\n                            name='preparation_time'\r\n                            validate={value =>\r\n                                value.split(\":\").some(Number) ? undefined : \"Time can't be zero\"}\r\n                            type='time'\r\n                            inputProps={{ step: 1 }}\r\n                            label='Preparation Time'\r\n                        />\r\n                        <CustomField\r\n                            name='type'\r\n                            validate={checkFills}\r\n                            label='Type of dish'\r\n                            select\r\n                            onChange={handleTypeChange(form.initialize)}\r\n                        >\r\n                            <MenuItem value='pizza' children='Pizza' />\r\n                            <MenuItem value='soup' children='Soup' />\r\n                            <MenuItem value='sandwich' children='Sandwich' />\r\n                        </CustomField>\r\n                    </Stack>\r\n                    <Collapse\r\n                        sx={{ m: 3 }}\r\n                        in={!!values.type}\r\n                        orientation='horizontal'\r\n                    >\r\n                        {values.type === 'pizza' &&\r\n                            <Box sx={{ '&>*': { mx: 2, mb: 1 } }}>\r\n                                <CustomField\r\n                                    name='no_of_slices'\r\n                                    validate={checkFills}\r\n                                    type='number'\r\n                                    label='Number of slices'\r\n                                    inputProps={{ min: '1' }}\r\n                                />\r\n                                <CustomField\r\n                                    name='diameter'\r\n                                    validate={combineCheck}\r\n                                    label='Diameter'\r\n                                    InputProps={{ endAdornment: 'cm' }}\r\n                                />\r\n                            </Box>}\r\n                        {values.type === 'soup' &&\r\n                            <Box sx={{ position: 'relative', mt: 3 }}>\r\n                                <Typography\r\n                                    children='Spiciness scale'\r\n                                    variant='body2'\r\n                                    sx={{\r\n                                        position: 'absolute',\r\n                                        top: 26\r\n                                    }}\r\n                                />\r\n                                <Field\r\n                                    name='spiciness_scale'\r\n                                    render={({ input }) => <StyledSlider\r\n                                        sx={{ minWidth: '220px' }}\r\n                                        valueLabelDisplay='on'\r\n                                        min={1}\r\n                                        max={10}\r\n                                        value={input.value}\r\n                                        onChange={input.onChange}\r\n                                    />}\r\n                                />\r\n                            </Box>}\r\n                        {values.type === 'sandwich' &&\r\n                            <CustomField\r\n                                name='slices_of_bread'\r\n                                type='number'\r\n                                validate={checkFills}\r\n                                inputProps={{ min: '1' }}\r\n                                label='Number of slices of bread'\r\n                            />}\r\n                    </Collapse>\r\n                    <Stack direction='row' sx={{ justifyContent: 'center' }} spacing={6}>\r\n                        <Button children=\"reset all\" variant='outlined'\r\n                            disabled={rest.pristine}\r\n                            onClick={() => form.reset({\r\n                                name: \"\",\r\n                                preparation_time: \"00:00:00\",\r\n                                type: ''\r\n                            })}\r\n                        />\r\n                        <Button\r\n                            type='submit'\r\n                            children='Ok'\r\n                            variant='outlined'\r\n                            disabled={rest.hasValidationErrors}\r\n                        />\r\n                    </Stack>\r\n                </Box>\r\n            }\r\n            }\r\n        />\r\n    )\r\n}","import {\r\n    Backdrop, Button, Card, CardActions, CardHeader, CircularProgress,\r\n    ListItemText, List, Popover, Box, Stack, Modal, Paper, ListItem, Zoom\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\nexport default function SummaryPage() {\r\n    const { status, sendedOrders, error } = useSelector(state => state);\r\n    const [openPopover, setOpenPopover] = useState(false);\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    let renderedList, component, lastOrder, renderHistory = null;\r\n\r\n    if (status === 'complete') {\r\n        lastOrder = sendedOrders[sendedOrders.length - 1];\r\n        renderedList = Object.entries(lastOrder).map((val, index) =>\r\n            <ListItemText key={index}\r\n                primary={val[0] + ':'}\r\n                secondary={val[1]}\r\n            />);\r\n        renderHistory = sendedOrders.map((order, index) => <Paper key={index} component={List}>\r\n            {Object.entries(order).map(([key, val]) => <ListItem key={key} >\r\n                <ListItemText sx={{ m: 0 }}\r\n                    primary={`${key}: `}\r\n                    secondary={val}\r\n                />\r\n            </ListItem>)}\r\n        </Paper>);\r\n    }\r\n\r\n    if (status !== 'pending')\r\n        component = status === 'error' ? <div>\r\n            <Card>\r\n                <CardHeader\r\n                    title='Upss... request is failed'\r\n                    subheader={error}\r\n                    subheaderTypographyProps={{ color: 'error.main' }}\r\n                />\r\n            </Card>\r\n            <Button component={Link} to='/confirm' children='please try again ' />\r\n        </div> : <div>\r\n            <Card>\r\n                <CardHeader\r\n                    title='You enquiry is sended'\r\n                    subheader={`number of order: ${lastOrder.id}`}\r\n                />\r\n                <CardActions>\r\n                    <Box sx={{ flex: 1 }} />\r\n\r\n                    <Button children='more info' color='inherit' size='small'\r\n                        endIcon={<KeyboardArrowDownIcon />}\r\n                        onClick={ev => setOpenPopover(ev.target)} />\r\n                    <Popover\r\n                        open={Boolean(openPopover)}\r\n                        anchorEl={openPopover}\r\n                        onClose={() => setOpenPopover(false)}\r\n                        elevation={1}\r\n                    >\r\n                        <List sx={{ py: 2, px: 4 }}>\r\n                            {renderedList}\r\n                        </List>\r\n                    </Popover>\r\n                </CardActions>\r\n            </Card>\r\n            <Stack direction='row' spacing={7}>\r\n                <Button component={Link} to='/' children='create new order' />\r\n                <Button children='check history' size='small' color='success'\r\n                    onClick={() => setOpenModal(true)}\r\n                />\r\n            </Stack>\r\n        </div>;\r\n\r\n    return (\r\n        <>\r\n            <Backdrop open={status === 'pending'} children={<CircularProgress />} />\r\n            {component}\r\n            <Modal open={openModal}\r\n                onClose={() => setOpenModal(false)}\r\n            >\r\n                <Zoom>\r\n                    <>\r\n                        <Paper children={renderHistory}\r\n                            sx={{\r\n                                p: 2,\r\n                                position: 'absolute',\r\n                                top: '50%',\r\n                                left: '50%',\r\n                                transform: 'translate(-50%, -50%)',\r\n                                display: 'flex',\r\n                                '&>*': { m: '5px !important' },\r\n                                maxWidth: '90%',\r\n                                overflow: 'auto'\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            variant='contained'\r\n                            color='error'\r\n                            onClick={() => setOpenModal(false)}\r\n                        >\r\n                            close\r\n                        </Button>\r\n                    </>\r\n                </Zoom>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import {\r\n  Container, Stepper, Step,\r\n  StepLabel, Paper, AppBar, Toolbar\r\n} from '@mui/material';\r\nimport {\r\n  Typography, IconButton, Drawer,\r\n  FormControlLabel, Switch as MuiSwitch, switchClasses\r\n} from '@mui/material';\r\nimport { MemoryRouter, Route, Switch } from 'react-router';\r\nimport ConfirmPage from './PAGES/confirmPage';\r\nimport StartPage from './PAGES/selectPage';\r\nimport SummaryPage from './PAGES/summaryPage';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport { useState, useMemo } from 'react';\r\nimport { Settings, LightMode, DarkMode } from '@mui/icons-material';\r\n\r\nconst Ofset = styled('div')(({ theme }) => theme.mixins.toolbar);\r\n\r\nconst steps = ['Create order', 'Confirm choice', 'Send request'];\r\n\r\nexport default function Main() {\r\n  const [step, setStep] = useState(0);\r\n  const [drawer, setDrawer] = useState(false);\r\n  const [dark, setDark] = useState(false);\r\n\r\n  const theme = useMemo(() => createTheme({\r\n    palette: {\r\n      mode: dark ? 'dark' : 'light'\r\n    }\r\n  }), [dark]);\r\n\r\n  const StyledSwitch = styled(MuiSwitch)(({ theme }) => ({\r\n    width: 55,\r\n    [`& .${switchClasses.switchBase}`]: {\r\n      width: 39, height: 38\r\n    }\r\n  }));\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppBar>\r\n        <Toolbar>\r\n          <Typography\r\n            variant='h4'\r\n            children=\"My dishes App\"\r\n            sx={{ flex: 1 }} />\r\n          <IconButton\r\n            children={<Settings />}\r\n            onClick={() => setDrawer(true)}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Ofset />\r\n      <Drawer anchor='right' open={drawer}\r\n        onClose={() => setDrawer(false)} closeAfterTransition\r\n        PaperProps={{ sx: { minWidth: 200 } }}\r\n      >\r\n        <FormControlLabel\r\n          label={!dark ? 'Darken' : 'Lighten'}\r\n          labelPlacement='top'\r\n          checked={dark}\r\n          sx={{ mt: 2, ml: 1 }}\r\n          control={<StyledSwitch\r\n            icon={<LightMode color='primary' />}\r\n            checkedIcon={<DarkMode />}\r\n            onChange={() => setDark(prev => !prev)}\r\n            color='primary'\r\n          />}\r\n        />\r\n      </Drawer>\r\n      <Container maxWidth=\"md\" component={Paper}\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center'\r\n        }}>\r\n\r\n        <MemoryRouter>\r\n          <Switch>\r\n            <Route exact path='/' render={() => <StartPage />} />\r\n            <Route path='/confirm' render={() => <ConfirmPage />} />\r\n            <Route path='/summary' render={() => <SummaryPage />} />\r\n          </Switch>\r\n\r\n\r\n          <Route render={({ location }) => {\r\n            setStep(() => {\r\n              switch (location.pathname) {\r\n                case '/confirm': return 1;\r\n                case '/summary': return 2;\r\n                default: return 0;\r\n              }\r\n            })\r\n            return <Stepper\r\n              activeStep={step}\r\n              alternativeLabel\r\n              sx={{ width: '90%', my: 5 }}>\r\n              {steps.map((step, index) => <Step key={index}>\r\n                <StepLabel\r\n                  children={step}\r\n                />\r\n              </Step>)}\r\n            </Stepper>\r\n          }} />\r\n        </MemoryRouter>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './STORE/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root')\r\n);"],"sourceRoot":""}